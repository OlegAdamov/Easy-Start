{"mappings":"oeAAAA,EAAA,S,ICkBAC,EAAe,C,KAlBF,CAACC,EAAKC,KACjB,IACE,MAAMC,EAAkBC,KAAKC,UAAUH,GACvCI,aAAaC,QAAQN,EAAKE,E,CAC1B,MAAOK,GACPC,QAAQD,MAAM,oBAAqBA,EAAME,Q,QAIhCT,IACX,IACE,MAAME,EAAkBG,aAAaK,QAAQV,GAC7C,OAA2B,OAApBE,OAA2BS,EAAYR,KAAKS,MAAMV,E,CACzD,MAAOK,GACPC,QAAQD,MAAM,oBAAqBA,EAAME,Q,iBDT7C,MAAMI,EAAO,CACTC,WAAYC,SAASC,cAAc,YACnCC,SAAUF,SAASC,cAAc,qBACjCE,MAAOH,SAASC,cAAc,eAC9BG,YAAaJ,SAASC,cAAc,mBAExCR,QAAQY,IAAIP,EAAKC,YACjBN,QAAQY,IAAIP,EAAKK,OACjBL,EAAKI,SAASI,iBAAiB,SAE/B,WACIR,EAAKK,MAAMI,UAAUC,IAAK,Y,IAa9B,MAAMC,EAAaT,SAASC,cAAc,iBACpCS,EAAYV,SAASC,cAAc,iBACnCU,EAAYX,SAASC,cAAc,gBACnCW,EAAYZ,SAASC,cAAc,UACnCY,EAAab,SAASC,cAAc,UACpCa,EAAWd,SAASC,cAAc,SAexCQ,EAAWH,iBAAiB,SAAS,KACnC,MAAMS,EAAW,CACfC,MAAOL,EAAUM,YACjBC,OAAQL,EAAWM,aAAa,OAChCC,MAAOR,EAAUK,YACjBI,KAAMP,EAASG,YAAYK,MAAM,OAAO,IAE1C,IAAKtC,EAAWuC,KArBE,sBAwBhB,OAFAvC,EAAWwC,KAtBK,qBAsBa,CAACT,SAC9BU,EAAAC,OAAOC,KAAK,oBAId,MAAMC,EAAY5C,EAAWuC,KA3BX,sBA4BlB,IAAK,MAAMM,KAAMD,EACf,GAAIxC,KAAKC,UAAUwC,KAAQzC,KAAKC,UAAU0B,GAExC,YADAU,EAAAC,OAAOC,KAAK,8BAIhBC,EAAUE,KAAKf,GACf/B,EAAWwC,KAnCO,qBAmCWI,GAC7BH,EAAAC,OAAOC,KAAK,mBAAmB,IAGjCjB,EAAUJ,iBAAiB,SAAS,KAClC,MAAMS,EAAW,CACfC,MAAOL,EAAUM,YACjBC,OAAQL,EAAWM,aAAa,OAChCC,MAAOR,EAAUK,YACjBI,KAAMP,EAASG,YAAYK,MAAM,OAAO,IAE1C,IAAKtC,EAAWuC,KA7CC,qBAgDf,OAFAvC,EAAWwC,KA9CI,oBA8Ca,CAACT,SAC7BU,EAAAC,OAAOC,KAAK,kBAId,MAAMC,EAAY5C,EAAWuC,KAnDZ,qBAoDjB,IAAK,MAAMM,KAAMD,EACf,GAAIxC,KAAKC,UAAUwC,KAAQzC,KAAKC,UAAU0B,GAExC,YADAU,EAAAC,OAAOC,KAAK,4BAIhBC,EAAUE,KAAKf,GACf/B,EAAWwC,KA3DM,oBA2DWI,GAC5BH,EAAAC,OAAOC,KAAK,iBAAiB","sources":["src/js/modal_main.js","src/js/localStorage/storage.js"],"sourcesContent":["import { createGalleryMarkup } from \"./gallery\";\nimport storageApi from './localStorage/storage';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\n\nconst refs = {\n    galleryRef: document.querySelector('.gallery'),\n    closeBtn: document.querySelector('[modal-close-btn]'),\n    modal: document.querySelector('.modal-main'),\n    galleryItem: document.querySelector('.gallery__item')\n}\nconsole.log(refs.galleryRef)\nconsole.log(refs.modal)\nrefs.closeBtn.addEventListener('click',removeBtn)\n\nfunction removeBtn () {\n    refs.modal.classList.add ('is-hidden');\n}\n\n\n\n\n// const refs = {\n//   linkEl: document.querySelector('.gallery-link'),\n//   titleEl: document.querySelector('.gallery__title'),\n//   imgEl: document.querySelector('gallery__img'),\n//   ,\n// };\n\nconst addWatched = document.querySelector('.add-to-watch');\nconst addQueued = document.querySelector('.add-to-queue');\nconst filmTitle = document.querySelector('.modal-title');\nconst filmGenre = document.querySelector('#genre');\nconst filmPoster = document.querySelector('.image');\nconst filmVote = document.querySelector('#vote');\nconst WATCHED_KEY = 'watched-films-list';\nconst QUEUED_KEY = 'queued-films-list';\n\n// function checkInStorage(data, key) {\n//   const savedData = storageApi.load(key);\n//   for (const el of savedData) {\n//     if (JSON.stringify(el) === JSON.stringify(data)) {\n//       return true;\n//     }\n//   }\n\n//   return false;\n// }\n\naddWatched.addEventListener('click', () => {\n  const tempData = {\n    title: filmTitle.textContent,\n    poster: filmPoster.getAttribute('src'),\n    genre: filmGenre.textContent,\n    vote: filmVote.textContent.split(' / ')[0],\n  };\n  if (!storageApi.load(WATCHED_KEY)) {\n    storageApi.save(WATCHED_KEY, [tempData]);\n    Notify.info('Added to Watched');\n    return;\n  }\n\n  const savedData = storageApi.load(WATCHED_KEY);\n  for (const el of savedData) {\n    if (JSON.stringify(el) === JSON.stringify(tempData)) {\n      Notify.info('Film is already in Watched');\n      return;\n    }\n  }\n  savedData.push(tempData);\n  storageApi.save(WATCHED_KEY, savedData);\n  Notify.info('Added to Watched');\n});\n\naddQueued.addEventListener('click', () => {\n  const tempData = {\n    title: filmTitle.textContent,\n    poster: filmPoster.getAttribute('src'),\n    genre: filmGenre.textContent,\n    vote: filmVote.textContent.split(' / ')[0],\n  };\n  if (!storageApi.load(QUEUED_KEY)) {\n    storageApi.save(QUEUED_KEY, [tempData]);\n    Notify.info('Added to Queue');\n    return;\n  }\n\n  const savedData = storageApi.load(QUEUED_KEY);\n  for (const el of savedData) {\n    if (JSON.stringify(el) === JSON.stringify(tempData)) {\n      Notify.info('Film is already in Queue');\n      return;\n    }\n  }\n  savedData.push(tempData);\n  storageApi.save(QUEUED_KEY, savedData);\n  Notify.info('Added to Queue');\n});\n","const save = (key, value) => {\n  try {\n    const serializedState = JSON.stringify(value);\n    localStorage.setItem(key, serializedState);\n  } catch (error) {\n    console.error('Set state error: ', error.message);\n  }\n};\n\nconst load = key => {\n  try {\n    const serializedState = localStorage.getItem(key);\n    return serializedState === null ? undefined : JSON.parse(serializedState);\n  } catch (error) {\n    console.error('Get state error: ', error.message);\n  }\n};\n\nexport default {\n  save,\n  load,\n};\n"],"names":["parcelRequire","$78593edcf7833020$export$2e2bcd8739ae039","key","value","serializedState","JSON","stringify","localStorage","setItem","error","console","message","getItem","undefined","parse","$0e4fc321d7855a74$var$refs","galleryRef","document","querySelector","closeBtn","modal","galleryItem","log","addEventListener","classList","add","$0e4fc321d7855a74$var$addWatched","$0e4fc321d7855a74$var$addQueued","$0e4fc321d7855a74$var$filmTitle","$0e4fc321d7855a74$var$filmGenre","$0e4fc321d7855a74$var$filmPoster","$0e4fc321d7855a74$var$filmVote","tempData","title","textContent","poster","getAttribute","genre","vote","split","load","save","$iQIUW","Notify","info","savedData","el","push"],"version":3,"file":"index.5177c24f.js.map"}