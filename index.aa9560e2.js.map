{"mappings":"gfAAAA,EAAA,SCAA,IAkBAC,EAAe,CACbC,KAnBW,SAACC,EAAKC,GACjB,IACE,IAAMC,EAAkBC,KAAKC,UAAUH,GACvCI,aAAaC,QAAQN,EAAKE,E,CAC1B,MAAOK,GACPC,QAAQD,MAAM,oBAAqBA,EAAME,Q,GAe3CC,KAXW,SAAAV,GACX,IACE,IAAME,EAAkBG,aAAaM,QAAQX,GAC7C,OAA2B,OAApBE,OAA2BU,EAAYT,KAAKU,MAAMX,E,CACzD,MAAOK,GACPC,QAAQD,MAAM,oBAAqBA,EAAME,Q,iBDTvCK,EAAO,CACTC,WAAYC,SAASC,cAAc,YACnCC,SAAUF,SAASC,cAAc,qBACjCE,MAAOH,SAASC,cAAc,eAC9BG,YAAaJ,SAASC,cAAc,mBAExCT,QAAQa,IAAIP,EAAKC,YACjBP,QAAQa,IAAIP,EAAKK,OACjBL,EAAKI,SAASI,iBAAiB,SAE/B,WACIR,EAAKK,MAAMI,UAAUC,IAAK,Y,IAa9B,IAAMC,EAAaT,SAASC,cAAc,iBACpCS,EAAYV,SAASC,cAAc,iBACnCU,EAAYX,SAASC,cAAc,gBACnCW,EAAYZ,SAASC,cAAc,UACnCY,EAAab,SAASC,cAAc,UACpCa,EAAWd,SAASC,cAAc,SAClCc,EAAc,qBACdC,EAAa,oBAanBP,EAAWH,iBAAiB,SAAS,WACnC,IAAMW,EAAW,CACfC,MAAOP,EAAUQ,YACjBC,OAAQP,EAAWQ,aAAa,OAChCC,MAAOV,EAAUO,YACjBI,KAAMT,EAASK,YAAYK,MAAM,OAAO,IAE1C,IAAK1C,EAAWY,KAAKqB,GAGnB,OAFAjC,EAAWC,KAAKgC,EAAa,CAACE,SAC9BQ,EAAAC,OAAOC,KAAK,oBAId,IAAMC,EAAY9C,EAAWY,KAAKqB,GAC7Bc,GAAQ,EAARC,GAAQ,EAARC,OAAQnC,E,IAAb,QAAKoC,EAAAC,EAAYL,EAASM,OAAAC,cAArBN,GAAAG,EAAAC,EAAQG,QAAAC,MAARR,GAAQ,GAAR,IAAMS,EAANN,EAAQ/C,MACX,GAAIE,KAAKC,UAAUkD,KAAQnD,KAAKC,UAAU6B,GAExC,YADAQ,EAAAC,OAAOC,KAAK,6B,WAFXG,GAAQ,EAARC,EAAQQ,C,aAARV,GAAQ,MAARI,EAAQO,QAARP,EAAQO,Q,YAARV,E,MAAAC,C,EAMLH,EAAUa,KAAKxB,GACfnC,EAAWC,KAAKgC,EAAaa,GAC7BH,EAAAC,OAAOC,KAAK,mB,IAGdjB,EAAUJ,iBAAiB,SAAS,WAClC,IAAMW,EAAW,CACfC,MAAOP,EAAUQ,YACjBC,OAAQP,EAAWQ,aAAa,OAChCC,MAAOV,EAAUO,YACjBI,KAAMT,EAASK,YAAYK,MAAM,OAAO,IAE1C,IAAK1C,EAAWY,KAAKsB,GAGnB,OAFAlC,EAAWC,KAAKiC,EAAY,CAACC,SAC7BQ,EAAAC,OAAOC,KAAK,kBAId,IAAMC,EAAY9C,EAAWY,KAAKsB,GAC7Ba,GAAQ,EAARC,GAAQ,EAARC,OAAQnC,E,IAAb,QAAKoC,EAAAC,EAAYL,EAASM,OAAAC,cAArBN,GAAAG,EAAAC,EAAQG,QAAAC,MAARR,GAAQ,GAAR,IAAMS,EAANN,EAAQ/C,MACX,GAAIE,KAAKC,UAAUkD,KAAQnD,KAAKC,UAAU6B,GAExC,YADAQ,EAAAC,OAAOC,KAAK,2B,WAFXG,GAAQ,EAARC,EAAQQ,C,aAARV,GAAQ,MAARI,EAAQO,QAARP,EAAQO,Q,YAARV,E,MAAAC,C,EAMLH,EAAUa,KAAKxB,GACfnC,EAAWC,KAAKiC,EAAYY,GAC5BH,EAAAC,OAAOC,KAAK,iB","sources":["src/js/modal_main.js","src/js/localStorage/storage.js"],"sourcesContent":["import { createGalleryMarkup } from \"./gallery\";\nimport storageApi from './localStorage/storage';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\n\nconst refs = {\n    galleryRef: document.querySelector('.gallery'),\n    closeBtn: document.querySelector('[modal-close-btn]'),\n    modal: document.querySelector('.modal-main'),\n    galleryItem: document.querySelector('.gallery__item')\n}\nconsole.log(refs.galleryRef)\nconsole.log(refs.modal)\nrefs.closeBtn.addEventListener('click',removeBtn)\n\nfunction removeBtn () {\n    refs.modal.classList.add ('is-hidden');\n}\n\n\n\n\n// const refs = {\n//   linkEl: document.querySelector('.gallery-link'),\n//   titleEl: document.querySelector('.gallery__title'),\n//   imgEl: document.querySelector('gallery__img'),\n//   ,\n// };\n\nconst addWatched = document.querySelector('.add-to-watch');\nconst addQueued = document.querySelector('.add-to-queue');\nconst filmTitle = document.querySelector('.modal-title');\nconst filmGenre = document.querySelector('#genre');\nconst filmPoster = document.querySelector('.image');\nconst filmVote = document.querySelector('#vote');\nconst WATCHED_KEY = 'watched-films-list';\nconst QUEUED_KEY = 'queued-films-list';\n\n// function checkInStorage(data, key) {\n//   const savedData = storageApi.load(key);\n//   for (const el of savedData) {\n//     if (JSON.stringify(el) === JSON.stringify(data)) {\n//       return true;\n//     }\n//   }\n\n//   return false;\n// }\n\naddWatched.addEventListener('click', () => {\n  const tempData = {\n    title: filmTitle.textContent,\n    poster: filmPoster.getAttribute('src'),\n    genre: filmGenre.textContent,\n    vote: filmVote.textContent.split(' / ')[0],\n  };\n  if (!storageApi.load(WATCHED_KEY)) {\n    storageApi.save(WATCHED_KEY, [tempData]);\n    Notify.info('Added to Watched');\n    return;\n  }\n\n  const savedData = storageApi.load(WATCHED_KEY);\n  for (const el of savedData) {\n    if (JSON.stringify(el) === JSON.stringify(tempData)) {\n      Notify.info('Film is already in Watched');\n      return;\n    }\n  }\n  savedData.push(tempData);\n  storageApi.save(WATCHED_KEY, savedData);\n  Notify.info('Added to Watched');\n});\n\naddQueued.addEventListener('click', () => {\n  const tempData = {\n    title: filmTitle.textContent,\n    poster: filmPoster.getAttribute('src'),\n    genre: filmGenre.textContent,\n    vote: filmVote.textContent.split(' / ')[0],\n  };\n  if (!storageApi.load(QUEUED_KEY)) {\n    storageApi.save(QUEUED_KEY, [tempData]);\n    Notify.info('Added to Queue');\n    return;\n  }\n\n  const savedData = storageApi.load(QUEUED_KEY);\n  for (const el of savedData) {\n    if (JSON.stringify(el) === JSON.stringify(tempData)) {\n      Notify.info('Film is already in Queue');\n      return;\n    }\n  }\n  savedData.push(tempData);\n  storageApi.save(QUEUED_KEY, savedData);\n  Notify.info('Added to Queue');\n});\n","const save = (key, value) => {\n  try {\n    const serializedState = JSON.stringify(value);\n    localStorage.setItem(key, serializedState);\n  } catch (error) {\n    console.error('Set state error: ', error.message);\n  }\n};\n\nconst load = key => {\n  try {\n    const serializedState = localStorage.getItem(key);\n    return serializedState === null ? undefined : JSON.parse(serializedState);\n  } catch (error) {\n    console.error('Get state error: ', error.message);\n  }\n};\n\nexport default {\n  save,\n  load,\n};\n"],"names":["parcelRequire","$f1fb9d3cc78adab0$export$2e2bcd8739ae039","save","key","value","serializedState","JSON","stringify","localStorage","setItem","error","console","message","load","getItem","undefined","parse","$b1b0d3f953e32163$var$refs","galleryRef","document","querySelector","closeBtn","modal","galleryItem","log","addEventListener","classList","add","$b1b0d3f953e32163$var$addWatched","$b1b0d3f953e32163$var$addQueued","$b1b0d3f953e32163$var$filmTitle","$b1b0d3f953e32163$var$filmGenre","$b1b0d3f953e32163$var$filmPoster","$b1b0d3f953e32163$var$filmVote","$b1b0d3f953e32163$var$WATCHED_KEY","$b1b0d3f953e32163$var$QUEUED_KEY","tempData","title","textContent","poster","getAttribute","genre","vote","split","$h6c0i","Notify","info","savedData","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","el","err","return","push"],"version":3,"file":"index.aa9560e2.js.map"}